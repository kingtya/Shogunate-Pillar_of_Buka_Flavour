namespace = pob_persuade_and_entice_events

pob_persuade_and_entice_events.0002 = { # 劝诱事件
	hidden = yes

	immediate = {
		scope:scheme = {
			scheme_target_character = {
				save_scope_as = target
			}
			scheme_owner = {
				save_scope_as = owner
				#SUCCESS ROLL

				random = {
					chance = scope:scheme.scheme_success_chance
					save_scope_value_as = {
						name = scheme_successful
						value = yes
					}
				}

				if = {
					limit = {
						scope:owner = {
							is_ruler = no
						}
						exists = scope:owner.liege
					}
					scope:owner.liege ?= {
						save_scope_as = liege
					}
					scope:liege = {
						if = {
							limit = { exists = scope:scheme_successful }
							trigger_event = pob_persuade_and_entice_events.1001
						}
						else = {
							trigger_event = pob_persuade_and_entice_events.1002
						}
					}
				}
				else = {
					if = {
						limit = { exists = scope:scheme_successful }
						trigger_event = pob_persuade_and_entice_events.1001
					}
					else = {
						trigger_event = pob_persuade_and_entice_events.1002
					}
				}
			}
		}
	}
}

pob_persuade_and_entice_events.1001 = { # 成功
	type = character_event
	title = pob_persuade_and_entice_events.1001.t
	desc = pob_persuade_and_entice_events.1001.desc
	theme = crown

	left_portrait = {
		character = scope:owner
		animation = throne_room_applaud_1
	}
	right_portrait = {
		character = scope:target
		animation = throne_room_bow_3
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	immediate = {
		play_music_cue = "mx_cue_positive_effect"
		scope:target = {
			save_scope_as = ronin
			set_employer = root
		}
	}

	option = {
		name = pob_persuade_and_entice_events.1001.a
	}

	after = {
		if = {
			limit = { exists = scope:scheme }
			scope:scheme = {
				end_scheme = yes
			}
		}
	}
}

pob_persuade_and_entice_events.1002 = { # 失败
	type = character_event
	title = pob_persuade_and_entice_events.1002.t
	desc = pob_persuade_and_entice_events.1002.desc
	theme = crown

	left_portrait = {
		character = scope:owner
		animation = worry
	}
	right_portrait = {
		trigger = {
			NOT = { root = scope:owner }
		}
		character = root
		animation = anger
	}
	lower_center_portrait = {
		trigger = {
			NOT = { root = scope:owner }
		}
		character = scope:target
	}
	lower_right_portrait = {
		trigger = {
			root = scope:owner
		}
		character = scope:target
	}

	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	option = {
		name = {
			text = pob_persuade_and_entice_events.1002.a
		}
		show_as_tooltip = {
			scope:scheme = {
				end_scheme = yes
			}
		}
	}

	option = {
		trigger = {
			scope:owner = {
				NOT = { has_character_flag = pob_persuasion_exploit_prevention }
			}
		}
		name = pob_persuade_and_entice_events.1002.b
		stress_impact = {
			base = minor_stress_gain
			impatient = minor_stress_gain
			patient = minor_stress_loss
		}
		scope:owner = {
			stress_impact = {
				base = minor_stress_gain
			}
			show_as_tooltip = {
				begin_scheme_basic_effect = {
					SCHEME_TYPE = pob_persuade_and_entice
					TARGET_TYPE = target_character
					TARGET_SCOPE = scope:target
				}
			}
		}
		hidden_effect = {
			save_scope_value_as = {
				name = restart_scheme
				value = yes
			}
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:restart_scheme
					exists = scope:scheme
				}
				scope:owner = {
					begin_scheme_basic_effect = {
						SCHEME_TYPE = pob_persuade_and_entice
						TARGET_TYPE = target_character
						TARGET_SCOPE = scope:target
					}
					add_character_flag = {
						flag = pob_persuasion_exploit_prevention
						years = 2
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:scheme
					exists = scope:target
					scope:target = { is_alive = yes }
				}
				scope:scheme = {
					end_scheme = yes
				}
			}
		}
	}
}