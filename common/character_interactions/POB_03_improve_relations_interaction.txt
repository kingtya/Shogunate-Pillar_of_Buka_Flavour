pob_improve_relations_interaction = {
	icon = icon_culture
	category = interaction_category_friendly

	common_interaction = yes
	interface_priority = 70

	scheme = pob_improve_relations

	send_name = START_SCHEME
	ignores_pending_interaction_block = yes

	cooldown = { years = 5 }

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_ruler = yes
			NOR = {
				top_liege = scope:actor
				liege = scope:actor
			}
		}
		trigger_if = {
			limit = {
				scope:actor = { is_ai = yes }
			}
			scope:actor = {
				NOR = {
					has_relation_rival = scope:recipient
					has_relation_nemesis = scope:recipient
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			can_start_scheme = {
				type = pob_improve_relations
				target_character = scope:recipient
			}
		}
	}

	desc = pob_improve_relations_interaction_desc

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = pob_improve_relations_start_scheme

				left_icon = scope:actor					
				right_icon = scope:recipient

				begin_scheme_basic_effect = {
					SCHEME_TYPE = pob_improve_relations
					TARGET_TYPE = target_character
					TARGET_SCOPE = scope:recipient
				}
			}
		}
	}

	ai_frequency = 120
	
	ai_potential = {
		NOR = {
			is_physically_able = yes
			any_scheme = {
				OR = {
					scheme_type = befriend
					scheme_type = sway
					scheme_type = seduce
					scheme_type = courting
					scheme_type = elope
					scheme_type = learn_language
					scheme_type = teach_governor
				}
			}
		}
	}

	ai_targets = {
		ai_recipients = dynasty
		max = 20
	}

	ai_targets = {
		ai_recipients = scripted_relations
	}

	auto_accept = yes

	ai_will_do = {
		base = 10
	}
}

pob_send_envoy_interaction = {

	category = interaction_category_diplomacy
	ai_min_reply_days = 1
	ai_max_reply_days = 3
	icon = icon_scheme_challenge_status
	
	desc = pob_send_envoy_interaction_desc

	interface_priority = 20

	common_interaction = yes

	#notification_text = 1
	popup_on_receive = no
	pause_on_receive = no

	cooldown = { years = 2 }
	
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_adult = yes
			is_ruler = yes
			NOR = {
				top_liege = scope:actor
				liege = scope:actor
			}
		}
		trigger_if = {
			limit = {
				scope:actor = { is_ai = yes }
			}
			scope:actor = {
				NOR = {
					has_relation_rival = scope:recipient
					has_relation_nemesis = scope:recipient
				}
			}
		}
	}

	is_valid_showing_failures_only = {

		trigger_if = {
			limit = {
				exists = scope:secondary_recipient
			}
			scope:secondary_recipient = {
				can_start_scheme = {
					type = pob_improve_relations
					target_character = scope:recipient
				}
			}
		}
		
	}

	populate_recipient_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					is_adult = yes
					NOT = {
						any_scheme = { exists = this }
					}
				}
				order_by = diplomacy
				add_to_list = characters
			}
		}
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = pob_improve_relations_start_scheme

				left_icon = scope:secondary_recipient			
				right_icon = scope:recipient

				scope:secondary_recipient = {
					begin_scheme_basic_effect = {
						SCHEME_TYPE = pob_improve_relations
						TARGET_TYPE = target_character
						TARGET_SCOPE = scope:recipient
					}
				}
			}
		}
	}

	ai_frequency = 120

	ai_potential = {
		always = yes
	}

	ai_targets = {
		ai_recipients = neighboring_rulers
	}

	auto_accept = yes

	ai_will_do = {
		base = 100

		modifier = {
			add = 100
			scope:recipient = {
				any_ally = {
					this = scope:actor
				}
			}
		}
	}
}

