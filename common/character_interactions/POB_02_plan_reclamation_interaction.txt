pob_plan_reclamation_interaction = {
	icon = grant_titles_interaction
	category = interaction_category_vassal

	common_interaction = yes
	interface_priority = 70

	scheme = pob_plan_reclamation

	send_name = START_SCHEME
	ignores_pending_interaction_block = yes

	cooldown = { years = 5 }

	is_shown = {
		scope:actor = {
			this = scope:recipient
			any_held_county = {
				NOT = { has_county_modifier = pob_plan_reclamation_county_modifier }
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			can_start_scheme = {
				type = pob_plan_reclamation
				target_character = scope:recipient
			}
		}
	}

	desc = pob_plan_reclamation_interaction_desc

	cost = {
		prestige = 100
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = pob_plan_reclamation_start_scheme

				left_icon = scope:actor

				begin_scheme_basic_effect = {
					SCHEME_TYPE = pob_plan_reclamation
					TARGET_TYPE = target_character
					TARGET_SCOPE = scope:recipient
				}
			}
		}
	}

	ai_frequency = 60
		
	ai_potential = {
		prestige >= 400
		NOR = {
			is_physically_able = yes
			any_scheme = {
				OR = {
					scheme_type = befriend
					scheme_type = sway
					scheme_type = seduce
					scheme_type = courting
					scheme_type = elope
					scheme_type = learn_language
					scheme_type = teach_governor
				}
			}
		}
	}

	ai_targets = {
		ai_recipients = self
	}

	auto_accept = yes

	ai_will_do = {
		base = 10
	}
}

pob_delegate_reclamation_interaction = {

	category = interaction_category_vassal
	ai_min_reply_days = 1
	ai_max_reply_days = 3
	icon = icon_scheme_challenge_status
	
	desc = pob_delegate_reclamation_interaction_desc

	common_interaction = yes
	interface_priority = 75

	popup_on_receive = no
	pause_on_receive = no

	cooldown = { years = 5 }
	
	redirect = {
		if = {
			limit = {
				NOT = { scope:actor = scope:recipient }
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
		}
		else = {
			scope:actor = {
				ordered_courtier = {
					limit = {
						is_adult = yes
						NOT = {
							any_scheme = { exists = this }
						}
					}
					order_by = stewardship
					save_scope_as = secondary_recipient
				}
			}
		}
		if = {
			limit = {
				scope:recipient = {
					OR = {
						this = scope:actor
						is_courtier_of = scope:actor
					}
				}
			}
			scope:actor = {
				save_scope_as = recipient
			}
		}
	}

	is_shown = {
		scope:actor = {
			any_held_county = {
				NOT = { has_county_modifier = pob_plan_reclamation_county_modifier }
			}
		}
		scope:recipient = {
			OR = {
				this = scope:actor
				is_courtier_of = scope:actor
			}
		}
	}

	is_valid_showing_failures_only = {

		trigger_if = {
			limit = {
				exists = scope:secondary_recipient
			}
			scope:secondary_recipient = {
				can_start_scheme = {
					type = pob_plan_reclamation
					target_character = scope:secondary_recipient
				}
			}
		}
		
	}

	populate_recipient_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					is_adult = yes
					NOT = {
						any_scheme = { exists = this }
					}
				}
				add_to_list = characters
			}
		}
	}

	cost = {
		prestige = 100
	}

	on_accept = {
		scope:actor = {
			send_interface_toast = {
				type = event_toast_effect_neutral
				title = pob_plan_reclamation_start_scheme

				left_icon = scope:secondary_recipient

				scope:secondary_recipient = {
					show_as_tooltip = {
						begin_scheme_basic_effect = {
							SCHEME_TYPE = pob_plan_reclamation
							TARGET_TYPE = target_character
							TARGET_SCOPE = scope:actor
						}
					}
					hidden_effect = {
						begin_scheme_basic_effect = {
							SCHEME_TYPE = pob_plan_reclamation
							TARGET_TYPE = target_character
							TARGET_SCOPE = scope:secondary_recipient
						}
					}
				}
			}
		}

		scope:secondary_recipient = {
			save_scope_as = owner
			pob_predict_scheme_difficulty_effect = {
				SCHEME = pob_promote_conscription
			}
			add_prestige = 100
		}
	}

	ai_frequency = 120

	ai_potential = {
		prestige >= 400
	}

	ai_targets = {
		ai_recipients = dynasty
		max = 20
	}

	ai_targets = {
		ai_recipients = scripted_relations
	}

	auto_accept = yes

	ai_will_do = {
		base = 100
	}
}
