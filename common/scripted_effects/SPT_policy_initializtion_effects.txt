#################
### 政策初始化 ###
#################
# 注：此处每一个flag对应一个国策，root为当前角色，如果需要动态显示国策，用if判断即可
## 保守
SPT_init_conservative_poilcy_flag_list = {
	
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_canal_improvements
	}
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_official_purveyor
	}
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_improve_militia
	}
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_council_system
	}
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_improve_cavalry
	}
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_foster_system
	}
	add_to_variable_list = {
		name = SPT_conservative_policy_flags
		target = flag:flag_spt_policy_buddhism_sanction
	}
	

}
## 中道
SPT_init_neutral_poilcy_flag_list = {
	add_to_variable_list = {
		name = SPT_neutral_policy_flags
		target = flag:flag_spt_policy_direct_daimyo_rule
	}
	add_to_variable_list = {
		name = SPT_neutral_policy_flags
		target = flag:flag_spt_policy_improve_labor
	}
	add_to_variable_list = {
		name = SPT_neutral_policy_flags
		target = flag:flag_spt_policy_deploy_draftee
	}
	add_to_variable_list = {
		name = SPT_neutral_policy_flags
		target = flag:flag_spt_policy_post_horse_system
	}
	add_to_variable_list = {
		name = SPT_neutral_policy_flags
		target = flag:flag_spt_policy_distant_diplomacy
	}
	add_to_variable_list = {
		name = SPT_neutral_policy_flags
		target = flag:flag_spt_policy_suggestion_box
	}
}
## 革新
SPT_init_progressive_poilcy_flag_list = {
	add_to_variable_list = {
		name = SPT_progressive_policy_flags
		target = flag:flag_spt_policy_soidier_professionaliztion
	}
	add_to_variable_list = {
		name = SPT_progressive_policy_flags
		target = flag:flag_spt_policy_easy_commerce
	}
	add_to_variable_list = {
		name = SPT_progressive_policy_flags
		target = flag:flag_spt_policy_western_sanction
	}
	add_to_variable_list = {
		name = SPT_progressive_policy_flags
		target = flag:flag_spt_policy_improve_firearms
	}
	add_to_variable_list = {
		name = SPT_progressive_policy_flags
		target = flag:flag_spt_policy_meritocracy
	}
	add_to_variable_list = {
		name = SPT_progressive_policy_flags
		target = flag:flag_spt_policy_supply_transporter
	}

}
## 御用
SPT_init_special_poilcy_flag_list = {
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_laws_of_imagawa
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_laws_of_takeda
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_five_admonitions
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_guardian_forces
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_intensive_firearms
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_dragon_corps
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_chivalry_education
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_expeditionary_support
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_million_minds_motto
	}
	add_to_variable_list = {
		name = SPT_special_policy_flags
		target = flag:flag_spt_policy_armoured_militia
	}

}

################
### 政策复位 ###
################
SPT_clear_flag_list = {
	clear_variable_list = SPT_conservative_policy_flags
	clear_variable_list = SPT_neutral_policy_flags
	clear_variable_list = SPT_progressive_policy_flags
	clear_variable_list = SPT_special_policy_flags
}

#################
### 政策点管理 ###
#################

SPT_init_points = {
	if = {
		limit = {
			NOT = {
				exists = var:current_kkt_points
			}
		}
		set_variable = {
			name = current_kkt_points
			value = 0
		}
	}
}

SPT_kkt_count_pocliy_points = {
	set_variable = {
		name = SPT_will_be_kkt_points
		value = {
			value = root.var:current_kkt_points
			add = $FLAG$.SPT_policy_points
		}
	}
}


################
### 封臣立场 ###
################
### 宫廷礼制
SPT_courtly_vassal_towards_policy_opinion_effect = {
	save_temporary_scope_as = actor
	if = {
		limit = { any_vassal = { has_vassal_stance = courtly } }
		if = {
			limit = { 
				$POLICY_TYPE_SW_1$ = no
				$POLICY_TYPE_SW_2$ = no
			}
			custom_tooltip = SPT_courtly_vassal_towards_policy_opinion_effect_tt_0
			hidden_effect = {
				every_vassal = {
					limit = {
						has_vassal_stance = courtly
					}
					add_opinion = {
						target = scope:actor
						modifier = spt_vassal_towards_conservative_policy_opinion
						opinion = $OPINION$
					}
				}
			}
		}
		if = {
			limit = { 
				$POLICY_TYPE_SW_1$ = no
				$POLICY_TYPE_SW_2$ = yes
			}
			custom_tooltip = SPT_courtly_vassal_towards_policy_opinion_effect_tt_1
			hidden_effect = {
				every_vassal = {
					limit = {
						has_vassal_stance = courtly
					}
					add_opinion = {
						target = scope:actor
						modifier = spt_vassal_towards_neutral_policy_opinion
						opinion = $OPINION$
					}
				}
			}
		}
		if = {
			limit = { 
				$POLICY_TYPE_SW_1$ = yes
				$POLICY_TYPE_SW_2$ = no
			}
			custom_tooltip = SPT_courtly_vassal_towards_policy_opinion_effect_tt_2
			hidden_effect = {
				every_vassal = {
					limit = {
						has_vassal_stance = courtly
					}
					add_opinion = {
						target = scope:actor
						modifier = spt_vassal_towards_progressive_policy_opinion
						opinion = $OPINION$
					}
				}
			}
		}
	}
}

SPT_glory_hound_vassal_towards_policy_opinion_effect = {
	save_temporary_scope_as = actor
	if = {
		limit = { any_vassal = { has_vassal_stance = glory_hound } }
		if = {
			limit = {
			}
			custom_tooltip = SPT_glory_hound_vassal_towards_policy_opinion_effect_tt
			hidden_effect = {
				every_vassal = {
					limit = {
						has_vassal_stance = glory_hound
					}
					add_opinion = {
						target = scope:actor
						modifier = spt_vassal_towards_conservative_policy_opinion
						opinion = $OPINION$
					}
				}
			}
		}
	}
}

SPT_parochial_vassal_towards_policy_opinion_effect = {
	save_temporary_scope_as = actor
	if = {
		limit = { any_vassal = { has_vassal_stance = parochial } }
		if = {
			limit = { 
				$POLICY_TYPE_SW_1$ = no
				$POLICY_TYPE_SW_2$ = no
			}
			custom_tooltip = SPT_parochial_vassal_towards_policy_opinion_effect_tt_0
			hidden_effect = {
				every_vassal = {
					limit = {
						has_vassal_stance = parochial
					}
					add_opinion = {
						target = scope:actor
						modifier = spt_vassal_towards_conservative_policy_opinion
						opinion = $OPINION$
					}
				}
			}
		}
		if = {
			limit = { 
				$POLICY_TYPE_SW_1$ = no
				$POLICY_TYPE_SW_2$ = yes
			}
		}
		if = {
			limit = { 
				$POLICY_TYPE_SW_1$ = yes
				$POLICY_TYPE_SW_2$ = no
			}
			custom_tooltip = SPT_parochial_vassal_towards_policy_opinion_effect_tt_2
			hidden_effect = {
				every_vassal = {
					limit = {
						has_vassal_stance = parochial
					}
					add_opinion = {
						target = scope:actor
						modifier = spt_vassal_towards_progressive_policy_opinion
						opinion = $OPINION$
					}
				}
			}
		}
	}
}

spt_block_firing_councillor_effect = {
	set_variable = {
		name = block_fire_councillor
		value = $COURT_OWNER$
		years = 10
	}
}

FF_test_effect = {
	# # 以下以root为要操作的角色 flag:a为当前政策 current_kkt_points是角色当前使用的政策点数量 SPT_policy_points是当前政策的政策点占用
	root = {
		if = { #这个if块确保了变量current_kkt_points的存在
			limit = {
				NOT = {
					exists = var:current_kkt_points
				}
			}
			set_variable = {
				name = current_kkt_points
				value = 0
			}
		}
		change_variable = {	#为角色添加政策点占用
			name = current_kkt_points #该变量为角色当前使用的政策点数量
			add = flag:a.SPT_policy_points #添加政策点占用
		}
		change_variable = { #为角色解除政策点占用
			name = current_kkt_points #该变量为角色当前使用的政策点数量
			subtract = flag:a.SPT_policy_points #解除政策点占用
		}
	}


	set_variable = {
		name = SPT_will_be_kkt_points
		value = {
			value = root.var:current_kkt_points
			add = $FLAG$.SPT_policy_points
		}
	}
	if = {
		limit = {
			root.var:SPT_will_be_kkt_points <= root.SPT_kkt_total_points
		}
	}
}